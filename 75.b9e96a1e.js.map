{"version":3,"file":"75.b9e96a1e.js","sources":["webpack://nmemonica/./src/components/Input/PlusMinus.tsx","webpack://nmemonica/./src/components/Input/ThresholdFilterSlider.tsx","webpack://nmemonica/./src/components/Pages/SetTermGList.tsx","webpack://nmemonica/./src/components/Input/VerbFormSlider.tsx","webpack://nmemonica/./src/components/Settings/SettingsVocab.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\nconst infinity = String.fromCharCode(parseInt(\"0x221e\", 16));\nexport default function PlusMinus(props) {\n    const { label = null, value, multiplier = 1, children = null } = props;\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        className: classNames({\n            \"d-flex flex-row justify-content-end\": true\n        }),\n        children: [\n            /*#__PURE__*/ _jsxs(\"div\", {\n                className: \"d-flex flex-column justify-content-center\",\n                children: [\n                    /*#__PURE__*/ _jsx(\"div\", {\n                        children: label\n                    }),\n                    children\n                ]\n            }),\n            /*#__PURE__*/ _jsxs(\"div\", {\n                className: \"d-flex flex-column\",\n                children: [\n                    /*#__PURE__*/ _jsx(\"div\", {\n                        className: \"clickable px-3 text-center\",\n                        onClick: ()=>{\n                            props.onChange((value ?? 0) + Number(multiplier), value ?? 0);\n                        },\n                        children: /*#__PURE__*/ _jsx(FontAwesomeIcon, {\n                            icon: faChevronUp\n                        })\n                    }),\n                    /*#__PURE__*/ _jsx(\"div\", {\n                        className: classNames({\n                            \"text-center px-2\": true\n                        }),\n                        children: value ?? infinity\n                    }),\n                    /*#__PURE__*/ _jsx(\"div\", {\n                        className: \"clickable px-3 text-center\",\n                        onClick: ()=>{\n                            props.onChange(value !== undefined ? Math.max(0, value - Number(multiplier)) : 0, value ?? 0);\n                        },\n                        children: /*#__PURE__*/ _jsx(FontAwesomeIcon, {\n                            icon: faChevronDown\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Slider } from \"@mui/material\";\nimport { SortAscIcon, SortDescIcon } from \"@primer/octicons-react\";\nimport { useCallback, useState } from \"react\";\nimport { heatMap } from \"../../helper/colorHelper\";\nimport { DIFFICULTY_THRLD, MEMORIZED_THRLD } from \"../../helper/sortHelper\";\nexport function ThresholdFilterSlider(props) {\n    const { threshold, setThreshold } = props;\n    const [defaultValue] = useState(Math.abs(threshold));\n    const c = heatMap(Math.abs(threshold) / 100, 0.75);\n    const difficultyMarks = [\n        {\n            value: MEMORIZED_THRLD\n        },\n        {\n            value: DIFFICULTY_THRLD\n        }\n    ];\n    const flipThresholdCB = useCallback(()=>{\n        setThreshold(-1 * threshold);\n    }, [\n        setThreshold,\n        threshold\n    ]);\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: /*#__PURE__*/ _jsxs(\"div\", {\n            className: \"w-100 d-flex flex-column\",\n            children: [\n                /*#__PURE__*/ _jsx(\"div\", {\n                    className: \"text-nowrap fs-x-small text-start\",\n                    children: `Difficulty filter: ${threshold}`\n                }),\n                /*#__PURE__*/ _jsxs(\"div\", {\n                    className: \"d-flex\",\n                    children: [\n                        /*#__PURE__*/ _jsx(Slider, {\n                            sx: {\n                                color: c\n                            },\n                            defaultValue: defaultValue,\n                            marks: difficultyMarks,\n                            track: threshold < 0 ? undefined : \"inverted\",\n                            onChangeCommitted: (e, newValue)=>{\n                                const sign = threshold < 0 ? -1 : 1;\n                                if (typeof newValue === \"number\") {\n                                    if (newValue === 0) {\n                                        setThreshold(Number(sign));\n                                    } else {\n                                        setThreshold(sign * newValue);\n                                    }\n                                }\n                            },\n                            valueLabelDisplay: \"auto\"\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mt-2 ms-3 \",\n                            onClick: flipThresholdCB,\n                            children: threshold < 0 ? /*#__PURE__*/ _jsx(SortAscIcon, {}) : /*#__PURE__*/ _jsx(SortDescIcon, {})\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport orderBy from \"lodash/orderBy\";\nimport { GroupItem } from \"../Form/GroupItem\";\n/**\n * Group and subgroup list\n * @param {SetTermGListProps} props\n */ export function SetTermGList(props) {\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        children: [\n            /*#__PURE__*/ _jsx(\"span\", {\n                className: \"fs-5 fw-light\",\n                children: \"Groups\"\n            }),\n            Object.keys(props.termsGroups).map((g)=>{\n                const grpActive = props.termsActive.includes(g);\n                return /*#__PURE__*/ _jsxs(\"div\", {\n                    children: [\n                        /*#__PURE__*/ _jsx(GroupItem, {\n                            active: props.termsActive.includes(g),\n                            onClick: ()=>props.toggleTermActiveGrp(g),\n                            children: g\n                        }),\n                        !grpActive && orderBy(props.termsGroups[g], (o)=>{\n                            // order numerically if group has _number\n                            const [, /*lbl,*/ num] = o.split(\"_\");\n                            if (Number.isInteger(parseInt(num, 10))) {\n                                return parseInt(num, 10);\n                            }\n                            return o;\n                        }).map((s)=>/*#__PURE__*/ _jsx(GroupItem, {\n                                addlStyle: \"ms-3\",\n                                active: props.termsActive.includes(g + \".\" + s),\n                                onClick: ()=>{\n                                    props.toggleTermActiveGrp(g + \".\" + s);\n                                },\n                                children: s\n                            }, `${g}.${s}`))\n                    ]\n                }, g);\n            })\n        ]\n    });\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Slider, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport \"../../css/VerbFormSlider.css\";\nexport default function VerbFormSlider(props) {\n    const [initVal] = useState(props.initial);\n    const safeInitial = Math.min(props.max, initVal);\n    const max = props.max;\n    const min = 0;\n    let marks = [];\n    let marksMap = {};\n    for(let x = min; x < max + 1; x++){\n        const slide = (x - min) / (max - min) * 100;\n        marks = [\n            ...marks,\n            {\n                value: slide,\n                raw: x\n            }\n        ];\n        marksMap[\"r\" + slide] = x;\n        marksMap[\"s\" + x] = slide;\n    }\n    const slideToRaw = (slide)=>{\n        return marksMap[\"r\" + slide];\n    };\n    const rawToSlide = (raw)=>{\n        return marksMap[\"s\" + raw];\n    };\n    const slideToLabel = (slide)=>{\n        const idx = slideToRaw(slide);\n        const half = Math.trunc(max / 2);\n        let label = \"\";\n        let splt = half + Math.abs(half - idx);\n        if (max % 2 !== 0 && idx <= half) {\n            splt++;\n            label = String(splt);\n        }\n        if (max % 2 === 0 && idx === half) {\n        // at the half way point\n        } else if (idx < half + 1) {\n            label = splt + \" \" + (max - splt);\n        } else {\n            label = max - splt + \" \" + splt;\n        }\n        return label;\n    };\n    const handleChange = (newValue)=>{\n        const prevVal = safeInitial;\n        const curVal = slideToRaw(newValue);\n        if (curVal !== prevVal) {\n            props.setChoiceN(curVal);\n        }\n    };\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        className: \"verb-form-slider-root\",\n        children: [\n            /*#__PURE__*/ _jsx(Typography, {\n                id: \"discrete-slider-restrict\",\n                gutterBottom: true,\n                children: props.statusText\n            }),\n            /*#__PURE__*/ _jsx(Slider, {\n                defaultValue: rawToSlide(safeInitial),\n                valueLabelFormat: slideToLabel,\n                getAriaValueText: slideToLabel,\n                \"aria-labelledby\": \"discrete-slider-restrict\",\n                track: false,\n                step: null,\n                valueLabelDisplay: \"auto\",\n                marks: marks,\n                onChangeCommitted: (event, newValue)=>{\n                    if (typeof newValue === \"number\") {\n                        handleChange(newValue);\n                    }\n                }\n            })\n        ]\n    });\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { ChevronUpIcon, PlusCircleIcon, XCircleIcon } from \"@primer/octicons-react\";\nimport classNames from \"classnames\";\nimport { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { DebugLevel } from \"../../helper/consoleHelper\";\nimport { buildAction } from \"../../helper/eventHandlerHelper\";\nimport { getStaleGroups } from \"../../helper/gameHelper\";\nimport { useConnectVocabulary } from \"../../hooks/useConnectVocabulary\";\nimport { logger } from \"../../slices/globalSlice\";\nimport { TermSortBy, TermSortByLabel } from \"../../slices/settingHelper\";\nimport { vocabularyInitState as VOCABULARY_INIT, getVocabulary, setMemorizedThreshold, setSpaRepMaxItemReview, setVerbFormsOrder, toggleAutoVerbView, toggleIncludeNew, toggleIncludeReviewed, toggleVocabularyActiveGrp, toggleVocabularyBareKanji, toggleVocabularyHint, toggleVocabularyOrdering, updateVerbColSplit } from \"../../slices/vocabularySlice\";\nimport SimpleListMenu from \"../Form/SimpleListMenu\";\nimport PlusMinus from \"../Input/PlusMinus\";\nimport SettingsSwitch from \"../Input/SettingsSwitch\";\nimport { ThresholdFilterSlider } from \"../Input/ThresholdFilterSlider\";\nimport VerbFormSlider from \"../Input/VerbFormSlider\";\nimport { NotReady } from \"../Pages/NotReady\";\nimport { SetTermGList } from \"../Pages/SetTermGList\";\nexport default function SettingsVocab() {\n    const dispatch = useDispatch();\n    const { vocabList: vocabulary, vocabGroups, sortMethod, bareKanji: showBareKanji, hintEnabled: vocabHintRef, activeGroup: vocabActive, autoVerbView, verbColSplit, difficultyThreshold, spaRepMaxReviewItem, verbFormsOrder, includeNew, includeReviewed } = useConnectVocabulary();\n    const vocabOrder = sortMethod;\n    const vocabHint = vocabHintRef.current;\n    if (Object.keys(vocabGroups).length === 0) {\n        void dispatch(getVocabulary());\n    }\n    const [shownForms, hiddenForms] = useMemo(()=>{\n        const allForms = VOCABULARY_INIT.setting.verbFormsOrder;\n        const shown = verbFormsOrder.reduce((acc, form)=>{\n            if (allForms.includes(form)) {\n                acc = [\n                    ...acc,\n                    form\n                ];\n            }\n            return acc;\n        }, []);\n        const hidden = allForms.reduce((acc, form)=>{\n            if (!shown.includes(form)) {\n                acc = [\n                    ...acc,\n                    form\n                ];\n            }\n            return acc;\n        }, []);\n        return [\n            shown,\n            hidden\n        ];\n    }, [\n        verbFormsOrder\n    ]);\n    if (vocabulary.length < 1 || Object.keys(vocabGroups).length < 1) return /*#__PURE__*/ _jsx(NotReady, {\n        addlStyle: \"vocabulary-settings\"\n    });\n    const stale = getStaleGroups(vocabGroups, vocabActive);\n    if (stale.length > 0) {\n        const error = new Error(\"Stale vocabulary active group\", {\n            cause: {\n                code: \"StaleVocabActiveGrp\",\n                value: stale\n            }\n        });\n        dispatch(logger(error.message, DebugLevel.ERROR));\n        dispatch(logger(JSON.stringify(stale), DebugLevel.ERROR));\n    }\n    const el = /*#__PURE__*/ _jsx(\"div\", {\n        className: \"outer\",\n        children: /*#__PURE__*/ _jsxs(\"div\", {\n            className: \"d-flex flex-row justify-content-between\",\n            children: [\n                /*#__PURE__*/ _jsx(\"div\", {\n                    className: \"column-1\",\n                    children: /*#__PURE__*/ _jsx(SetTermGList, {\n                        termsGroups: vocabGroups,\n                        termsActive: vocabActive,\n                        toggleTermActiveGrp: buildAction(dispatch, toggleVocabularyActiveGrp)\n                    })\n                }),\n                /*#__PURE__*/ _jsxs(\"div\", {\n                    className: \"column-2 setting-block\",\n                    children: [\n                        /*#__PURE__*/ _jsx(SimpleListMenu, {\n                            title: \"Sort by:\",\n                            options: TermSortByLabel,\n                            initial: vocabOrder,\n                            onChange: (index)=>{\n                                return buildAction(dispatch, toggleVocabularyOrdering)(index);\n                            }\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"d-flex justify-content-end\",\n                            children: /*#__PURE__*/ _jsx(ThresholdFilterSlider, {\n                                threshold: difficultyThreshold,\n                                setThreshold: buildAction(dispatch, setMemorizedThreshold)\n                            })\n                        }),\n                        vocabOrder === TermSortBy.RECALL && /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsxs(PlusMinus, {\n                                value: spaRepMaxReviewItem,\n                                onChange: (value)=>{\n                                    dispatch(setSpaRepMaxItemReview(value));\n                                },\n                                children: [\n                                    /*#__PURE__*/ _jsx(\"div\", {\n                                        className: \"text-nowrap\",\n                                        children: \"Max review items\"\n                                    }),\n                                    /*#__PURE__*/ _jsxs(\"div\", {\n                                        className: \"text-center\",\n                                        children: [\n                                            /*#__PURE__*/ _jsxs(\"span\", {\n                                                className: \"clickable\",\n                                                onClick: ()=>{\n                                                    dispatch(setSpaRepMaxItemReview(0));\n                                                },\n                                                children: [\n                                                    /*#__PURE__*/ _jsx(\"b\", {\n                                                        children: \"m\"\n                                                    }),\n                                                    \"in\"\n                                                ]\n                                            }),\n                                            \" \",\n                                            \"-\",\n                                            \" \",\n                                            /*#__PURE__*/ _jsxs(\"span\", {\n                                                className: \"clickable\",\n                                                onClick: ()=>{\n                                                    dispatch(setSpaRepMaxItemReview(undefined));\n                                                },\n                                                children: [\n                                                    /*#__PURE__*/ _jsx(\"b\", {\n                                                        children: \"M\"\n                                                    }),\n                                                    \"ax\"\n                                                ]\n                                            })\n                                        ]\n                                    })\n                                ]\n                            })\n                        }),\n                        vocabOrder === TermSortBy.VIEW_DATE && /*#__PURE__*/ _jsxs(_Fragment, {\n                            children: [\n                                /*#__PURE__*/ _jsx(\"div\", {\n                                    className: \"mb-2\",\n                                    children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                        active: includeNew,\n                                        action: buildAction(dispatch, toggleIncludeNew),\n                                        statusText: \"Staleness +New\"\n                                    })\n                                }),\n                                /*#__PURE__*/ _jsx(\"div\", {\n                                    className: \"mb-2\",\n                                    children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                        active: includeReviewed,\n                                        action: buildAction(dispatch, toggleIncludeReviewed),\n                                        statusText: \"Staleness +Reviewed\"\n                                    })\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                active: showBareKanji,\n                                action: buildAction(dispatch, toggleVocabularyBareKanji),\n                                statusText: \"English+Kanji\"\n                            })\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                active: vocabHint,\n                                action: buildAction(dispatch, toggleVocabularyHint),\n                                statusText: \"Hint\"\n                            })\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                active: autoVerbView,\n                                action: buildAction(dispatch, toggleAutoVerbView),\n                                statusText: \"Auto Verb View\"\n                            })\n                        }),\n                        autoVerbView && /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsx(\"div\", {\n                                className: \"d-flex flex-row justify-content-end\",\n                                children: /*#__PURE__*/ _jsx(\"div\", {\n                                    children: [\n                                        shownForms.map((form, k)=>/*#__PURE__*/ _jsxs(\"div\", {\n                                                className: classNames({\n                                                    \"d-flex justify-content-between\": true,\n                                                    \"pt-2\": k === shownForms.length - verbColSplit,\n                                                    \"pb-2\": k === shownForms.length - 1 && verbColSplit === 0\n                                                }),\n                                                children: [\n                                                    /*#__PURE__*/ _jsx(\"div\", {\n                                                        className: classNames({\n                                                            \"me-3\": true,\n                                                            \"disabled-color\": k === 0\n                                                        }),\n                                                        onClick: ()=>{\n                                                            if (k > 0) {\n                                                                const a = shownForms.slice(0, k - 1);\n                                                                const b = shownForms[k - 1];\n                                                                const x = shownForms[k];\n                                                                const c = shownForms.slice(k + 1);\n                                                                dispatch(setVerbFormsOrder([\n                                                                    ...a,\n                                                                    x,\n                                                                    b,\n                                                                    ...c\n                                                                ]));\n                                                            }\n                                                        },\n                                                        children: /*#__PURE__*/ _jsx(ChevronUpIcon, {\n                                                            className: \"mt-1\",\n                                                            size: \"small\",\n                                                            \"aria-label\": \"move up\"\n                                                        })\n                                                    }),\n                                                    /*#__PURE__*/ _jsx(\"span\", {\n                                                        className: \"w-100 text-start\",\n                                                        children: form\n                                                    }),\n                                                    /*#__PURE__*/ _jsx(\"div\", {\n                                                        onClick: ()=>{\n                                                            if (shownForms.length > 1) {\n                                                                const minusK = [\n                                                                    ...shownForms.slice(0, k),\n                                                                    ...shownForms.slice(k + 1)\n                                                                ];\n                                                                dispatch(setVerbFormsOrder(minusK));\n                                                            }\n                                                        },\n                                                        children: /*#__PURE__*/ _jsx(XCircleIcon, {\n                                                            className: classNames({\n                                                                \"mt-1 ms-3\": true,\n                                                                \"incorrect-color\": shownForms.length > 1,\n                                                                \"disabled-color\": shownForms.length === 1\n                                                            }),\n                                                            size: \"small\",\n                                                            \"aria-label\": \"remove\"\n                                                        })\n                                                    })\n                                                ]\n                                            }, form)),\n                                        hiddenForms.map((form, k)=>/*#__PURE__*/ _jsxs(\"div\", {\n                                                className: \"d-flex justify-content-between\",\n                                                children: [\n                                                    /*#__PURE__*/ _jsx(\"div\", {\n                                                        className: \"me-3 invisible\",\n                                                        children: /*#__PURE__*/ _jsx(ChevronUpIcon, {\n                                                            className: \"mt-1\",\n                                                            size: \"small\",\n                                                            \"aria-label\": \"move up\"\n                                                        })\n                                                    }),\n                                                    /*#__PURE__*/ _jsx(\"span\", {\n                                                        className: \"w-100 text-start disabled-color\",\n                                                        children: form\n                                                    }),\n                                                    /*#__PURE__*/ _jsx(\"div\", {\n                                                        onClick: buildAction(dispatch, setVerbFormsOrder, [\n                                                            ...shownForms,\n                                                            hiddenForms[k]\n                                                        ]),\n                                                        children: /*#__PURE__*/ _jsx(PlusCircleIcon, {\n                                                            className: \"mt-1 ms-3\",\n                                                            size: \"small\",\n                                                            \"aria-label\": \"add\"\n                                                        })\n                                                    })\n                                                ]\n                                            }, form))\n                                    ]\n                                })\n                            })\n                        }),\n                        autoVerbView && /*#__PURE__*/ _jsx(\"div\", {\n                            children: /*#__PURE__*/ _jsx(\"div\", {\n                                className: \"d-flex justify-content-end p-2\",\n                                children: /*#__PURE__*/ _jsx(VerbFormSlider, {\n                                    initial: shownForms.length - verbColSplit,\n                                    setChoiceN: (slip)=>{\n                                        dispatch(updateVerbColSplit(shownForms.length - slip));\n                                    },\n                                    max: verbFormsOrder.length,\n                                    statusText: \"Column layout\"\n                                })\n                            })\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n    return el;\n}\n"],"names":["String","parseInt","c","Number","Math","d","e","Object","s","Error","JSON"],"mappings":"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"}